# Copyright (c) 2021-2024 HPMicro
# SPDX-License-Identifier: BSD-3-Clause

if(DEFINED CONFIG_MBEDTLS)
    if (${CONFIG_MBEDTLS})
        sdk_compile_definitions(-DMBEDTLS_CONFIG_FILE="hpm_sdk_mbedtls_config.h")
    endif()
endif()

if(DEFINED CONFIG_UART_CHANNEL)
    if (${CONFIG_UART_CHANNEL})
        sdk_compile_definitions("-DCONFIG_UART_CHANNEL=1")
        sdk_inc(uart/inc)
        sdk_src(uart/src/uart_xmodem.c)
        sdk_src(uart/src/uart.c)
    endif()
endif()

if(DEFINED CONFIG_ENET_CHANNEL)
    if (${CONFIG_ENET_CHANNEL})
        sdk_compile_definitions("-DCONFIG_ENET_CHANNEL=1")
        sdk_compile_definitions(-D__DISABLE_AUTO_NEGO=0)
        sdk_compile_definitions(-D__ENABLE_ENET_RECEIVE_INTERRUPT=0)
        sdk_compile_definitions(-DLWIP_DHCP=0)

        sdk_inc(enet/ports/baremetal/single)
        sdk_inc(enet/ports/baremetal/single/arch)
        sdk_inc(enet/common/single)
        sdk_inc(enet/lwip_tcpecho/inc)
        sdk_inc(enet/lwip_tcpecho/inc/app)

        sdk_src(enet/ports/baremetal/single/arch/sys_arch.c)
        sdk_src(enet/ports/baremetal/single/ethernetif.c)
        sdk_src(enet/common/single/common.c)
        sdk_src(enet/common/single/netconf.c)
        sdk_src(enet/lwip_tcpecho/src/app/tcp_echo.c)
        sdk_src(enet/lwip_tcpecho/src/lwip.c)
    endif()
endif()

if(DEFINED CONFIG_USB_DEVICE_CHANNEL)
    if (${CONFIG_USB_DEVICE_CHANNEL})
        sdk_compile_definitions("-DCONFIG_USB_DEVICE_CHANNEL=1")

        sdk_inc(usb/config)
        sdk_src(usb/device/msc/ram_disk/src/device.c)
        sdk_src(usb/device/msc/ram_disk/src/msc_ram.c)
    endif()
endif()

if(DEFINED CONFIG_USB_HOST_CHANNEL)
    if (${CONFIG_USB_HOST_CHANNEL})
        sdk_compile_definitions("-DCONFIG_USB_HOST_CHANNEL=1")
        sdk_compile_definitions(-DCFG_TUSB_MCU=OPT_MCU_HPM)
        sdk_compile_definitions(-DUSB_HOST_MCU_CORE=HPM_CORE0)
        sdk_compile_definitions(-DUSB_FATFS_ENABLE)
        # sdk_compile_options("-Os")

        sdk_inc(usb/host/msc_udisk/inc)
        sdk_src(usb/host/msc_udisk/src/host.c)
        sdk_src(usb/host/msc_udisk/src/msc_app.c)
        sdk_src(usb/host/msc_udisk/src/file_op.c)
    endif()
endif()

if(DEFINED CONFIG_ECAT_FOE_CHANNEL)
    if (${CONFIG_ECAT_FOE_CHANNEL})
        sdk_compile_definitions("-DCONFIG_ECAT_FOE_CHANNEL=1")
        # ECAT SSC stack
        sdk_inc(ecat/SSC/Src)
        sdk_src(ecat/SSC/Src/bootmode.c)
        sdk_src(ecat/SSC/Src/coeappl.c)
        sdk_src(ecat/SSC/Src/ecatappl.c)
        sdk_src(ecat/SSC/Src/ecatcoe.c)
        sdk_src(ecat/SSC/Src/ecatfoe.c)
        sdk_src(ecat/SSC/Src/ecatslv.c)
        sdk_src(ecat/SSC/Src/mailbox.c)
        sdk_src(ecat/SSC/Src/objdef.c)
        sdk_src(ecat/SSC/Src/sdoserv.c)
        sdk_src(ecat/SSC/Src/foeappl.c)

        # hpm ecat port
        sdk_inc(${HPM_SDK_BASE}/samples/ethercat/port)
        sdk_src(${HPM_SDK_BASE}/samples/ethercat/port/hpm_ecat_hw.c)
        sdk_src(${HPM_SDK_BASE}/samples/ethercat/port/hpm_ecat_phy.c)
        if(CONFIG_EEPROM_EMULATION)
        sdk_src(${HPM_SDK_BASE}/samples/ethercat/port/hpm_ecat_e2p_emulation.c)
        endif()
        sdk_src(${HPM_SDK_BASE}/samples/ethercat/port/hpm_ecat_foe.c)

        sdk_inc(ecat)
        sdk_src(ecat/ssc_application.c)
        sdk_src(ecat/ecat_foe_support.c)
        sdk_src(ecat/ecat_foe.c)
    endif()
endif()